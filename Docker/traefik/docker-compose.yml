services:
  traefik:
    image: traefik:v2.11
    command:
      - "--api.insecure=true" # Solo para desarrollo, en producci√≥n debe ser seguro
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.db.address=:5432/tcp" # Configura una entrada TCP en el puerto 5432
      - "--providers.docker.defaultrule=Host(`{{ index .Labels \"com.docker.compose.service\" }}.localhost`)"
    ports:
      - "80:80"
      - "8080:8080" # Puerto del panel de Traefik
      - "5432:5432" # Exponer el puerto 5432
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - mired2

  ms1:
    image: ms1:1.0.1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ms1.rule=Host(`ms1.localhost`)"
      - "traefik.http.services.ms1.loadbalancer.server.port=5000" # Cambia el puerto si es necesario
    depends_on:
      - db
    networks:
      - mired2


  db:
    image: postgres:16.2-bullseye
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.db.entrypoints=db"
      - "traefik.tcp.routers.db.rule=HostSNI(`*`)"
      - "traefik.tcp.services.db.loadbalancer.server.port=5432"
    networks:
      - mired2

networks:
  mired2:
    external: true

volumes:
  postgres_data:
